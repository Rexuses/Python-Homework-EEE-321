# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'matrix.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QSize
from PyQt5.QtGui import QPixmap, QIcon


class Ui_Form(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setObjectName("Form")
        self.resize(1095, 731)
        self.setStyleSheet("background:#fc3962;")
        self.first_matrix_row_QLabel = QtWidgets.QLabel(self)
        self.first_matrix_row_QLabel.setGeometry(QtCore.QRect(40, 50, 111, 21))
        self.first_matrix_row_QLabel.setStyleSheet("color:white;")
        self.first_matrix_row_QLabel.setObjectName("first_matrix_row_QLabel")
        self.first_matrix_row_QLineedit = QtWidgets.QLineEdit(self)
        self.first_matrix_row_QLineedit.setGeometry(QtCore.QRect(170, 50, 113, 20))
        self.first_matrix_row_QLineedit.setObjectName("first_matrix_row_QLineedit")
        self.first_matrix_row_QLineedit.setStyleSheet("color:white;")
        self.first_matrix_column_QLabel = QtWidgets.QLabel(self)
        self.first_matrix_column_QLabel.setGeometry(QtCore.QRect(40, 80, 111, 21))
        self.first_matrix_column_QLabel.setStyleSheet("color:white;")
        self.first_matrix_column_QLabel.setObjectName("first_matrix_column_QLabel")
        self.first_matrix_column_QLineedit = QtWidgets.QLineEdit(self)
        self.first_matrix_column_QLineedit.setGeometry(QtCore.QRect(170, 80, 113, 20))
        self.first_matrix_column_QLineedit.setObjectName("first_matrix_column_QLineedit")
        self.first_matrix_column_QLineedit.setStyleSheet("color:white;")
        self.second_matrix_row_QLabel = QtWidgets.QLabel(self)
        self.second_matrix_row_QLabel.setGeometry(QtCore.QRect(40, 110, 111, 21))
        self.second_matrix_row_QLabel.setStyleSheet("color:white;")
        self.second_matrix_row_QLabel.setObjectName("second_matrix_row_QLabel")
        self.second_matrix_row_QLineedit = QtWidgets.QLineEdit(self)
        self.second_matrix_row_QLineedit.setGeometry(QtCore.QRect(170, 110, 113, 20))
        self.second_matrix_row_QLineedit.setObjectName("second_matrix_row_QLineedit")
        self.second_matrix_row_QLineedit.setStyleSheet("color:white;")
        self.second_matrix_column_QLabel = QtWidgets.QLabel(self)
        self.second_matrix_column_QLabel.setGeometry(QtCore.QRect(40, 140, 111, 21))
        self.second_matrix_column_QLabel.setStyleSheet("color:white;")
        self.second_matrix_column_QLabel.setObjectName("second_matrix_column_QLabel")
        self.second_matrix_column_QLineedit = QtWidgets.QLineEdit(self)
        self.second_matrix_column_QLineedit.setGeometry(QtCore.QRect(170, 140, 113, 20))
        self.second_matrix_column_QLineedit.setObjectName("second_matrix_column_QLineedit")
        self.second_matrix_column_QLineedit.setStyleSheet("color:white;")
        self.first_matrix_QTableWidget = QtWidgets.QTableWidget(self)
        self.first_matrix_QTableWidget.setGeometry(QtCore.QRect(320, 40, 361, 241))
        self.first_matrix_QTableWidget.setStyleSheet("background:white;")
        self.first_matrix_QTableWidget.setRowCount(7)
        self.first_matrix_QTableWidget.setColumnCount(7)
        self.first_matrix_QTableWidget.setObjectName("first_matrix_QTableWidget")
        self.first_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
        self.second_matrix_QTableWidget = QtWidgets.QTableWidget(self)
        self.second_matrix_QTableWidget.setGeometry(QtCore.QRect(700, 40, 361, 241))
        self.second_matrix_QTableWidget.setStyleSheet("background:white;")
        self.second_matrix_QTableWidget.setRowCount(7)
        self.second_matrix_QTableWidget.setColumnCount(7)
        self.second_matrix_QTableWidget.setObjectName("second_matrix_QTableWidget")
        self.second_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
        self.first_matrix_information_QLabel = QtWidgets.QLabel(self)
        self.first_matrix_information_QLabel.setGeometry(QtCore.QRect(430, 10, 121, 21))
        self.first_matrix_information_QLabel.setStyleSheet("color:white; ")
        self.first_matrix_information_QLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.first_matrix_information_QLabel.setObjectName("first_matrix_information_QLabel")
        self.second_matrix_information_QLabel = QtWidgets.QLabel(self)
        self.second_matrix_information_QLabel.setGeometry(QtCore.QRect(820, 10, 121, 21))
        self.second_matrix_information_QLabel.setStyleSheet("color:white;")
        self.second_matrix_information_QLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.second_matrix_information_QLabel.setObjectName("second_matrix_information_QLabel")
        self.calculate_QPushbutton = QtWidgets.QPushButton(self)
        self.calculate_QPushbutton.setGeometry(QtCore.QRect(184, 190, 81, 31))
        self.calculate_QPushbutton.setStyleSheet("QPushButton\n"
"{\n"
"    color: #fc3962;\n"
"    background-color:#FAF3F5;\n"
"    border-color: #1e1e1e;\n"
"    border-style: solid;\n"
"    border-radius: 6;\n"
"    padding: 3px;\n"
"    font-size: 12px;\n"
"    padding-left: 5px;\n"
"    padding-right: 5px;\n"
"    min-width: 40px;\n"
"}")
        self.calculate_QPushbutton.setObjectName("calculate_QPushbutton")
        self.calculate_QPushbutton.clicked.connect(self.findit)
        self.information_QLabel = QtWidgets.QLabel(self)
        self.information_QLabel.setGeometry(QtCore.QRect(10, 310, 431, 31))
        self.information_QLabel.setStyleSheet("color:white; font-size: 12px;")
        self.information_QLabel.setText("")
        self.information_QLabel.setObjectName("information_QLabel")
        self.result_matrix_QTableWidget = QtWidgets.QTableWidget(self)
        self.result_matrix_QTableWidget.setGeometry(QtCore.QRect(510, 370, 361, 241))
        self.result_matrix_QTableWidget.setStyleSheet("background:white;")
        self.result_matrix_QTableWidget.setRowCount(7)
        self.result_matrix_QTableWidget.setColumnCount(7)
        self.result_matrix_QTableWidget.setObjectName("result_matrix_QTableWidget")
        self.result_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
        self.result_matrix_information_QLabel = QtWidgets.QLabel(self)
        self.result_matrix_information_QLabel.setGeometry(QtCore.QRect(620, 320, 121, 21))
        self.result_matrix_information_QLabel.setStyleSheet("color:white;")
        self.result_matrix_information_QLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.result_matrix_information_QLabel.setObjectName("result_matrix_information_QLabel")
        self.create_QPushbutton = QtWidgets.QPushButton(self)
        self.create_QPushbutton.setGeometry(QtCore.QRect(50, 190, 81, 31))
        self.create_QPushbutton.setStyleSheet("QPushButton\n"
"{\n"
"    color: #fc3962;\n"
"    background-color:#FAF3F5;\n"
"    border-color: #1e1e1e;\n"
"    border-style: solid;\n"
"    border-radius: 6;\n"
"    padding: 3px;\n"
"    font-size: 12px;\n"
"    padding-left: 5px;\n"
"    padding-right: 5px;\n"
"    min-width: 40px;\n"
"}")
        self.create_QPushbutton.setObjectName("create_QPushbutton")
        self.create_QPushbutton.clicked.connect(self.Make)
        self.random_QPushbutton = QtWidgets.QPushButton(self)
        self.random_QPushbutton.setGeometry(QtCore.QRect(50, 240, 81, 31))
        self.random_QPushbutton.setStyleSheet("QPushButton\n"
"{\n"
"    color: #fc3962;\n"
"    background-color:#FAF3F5;\n"
"    border-color: #1e1e1e;\n"
"    border-style: solid;\n"
"    border-radius: 6;\n"
"    padding: 3px;\n"
"    font-size: 12px;\n"
"    padding-left: 5px;\n"
"    padding-right: 5px;\n"
"    min-width: 40px;\n"
"}")
        self.random_QPushbutton.setObjectName("random_QPushbutton")
        self.random_QPushbutton.clicked.connect(self.randomizer)

        self.pixmap = QPixmap("back_icon.png")
        self.backButton = QtWidgets.QPushButton(self)
        self.backButton.setGeometry(QtCore.QRect(0, 5, 30, 23))
        self.backButton.setObjectName("backButton")
        self.backButton.setIcon(QIcon(self.pixmap))
        self.backButton.setIconSize(QSize(30,23))

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)
    def findit(self):
        while True:
            try:

                Matrix1 = []
                Matrix2 = []
                Result = []

                Matrix_1_row = int(float(self.first_matrix_row_QLineedit.text()))
                Matrix_1_column = int(float(self.first_matrix_column_QLineedit.text()))
                Matrix_2_row = int(float(self.second_matrix_row_QLineedit.text()))
                Matrix_2_column = int(float(self.second_matrix_column_QLineedit.text()))
                if Matrix_1_column != Matrix_2_row:
                    self.information_QLabel.setText(
                        "These matrices can't be multiplied.\nColumn of the first matrix must be equal to row of the second matrix.")
                    break
                else:
                    self.information_QLabel.setText("")
                    for i in range(0, Matrix_1_row):
                        i_Row = list()

                        for j in range(0, Matrix_1_column):
                            Row_in_order = float(self.first_matrix_QTableWidget.item(i, j).text())

                            i_Row.append(Row_in_order)
                        Matrix1.append(i_Row)

                    for i in range(0, Matrix_2_row):
                        i_Row = list()

                        for j in range(0, Matrix_2_column):
                            Row_in_order = float(self.second_matrix_QTableWidget.item(i, j).text())

                            i_Row.append(Row_in_order)
                        Matrix2.append(i_Row)


                    for i in range(0, Matrix_1_row):
                        for j in range(0, Matrix_2_column):
                            Sum = 0
                            for k in range(0, Matrix_2_row):
                                y = float(Matrix1[i][k]) * float(Matrix2[k][j])
                                Sum = Sum + y

                            self.result_matrix_QTableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(str(Sum)))

                break
            except:
                self.information_QLabel.setText("Please enter float or integer numbers for the matrix values.\n"
                                    "Make sure you enter the correct number of rows and columns.")
                break

    def Make(self):
        try:

            Matrix_1_row = int(float(self.first_matrix_row_QLineedit.text()))
            Matrix_1_column = int(float(self.first_matrix_column_QLineedit.text()))
            Matrix_2_row = int(float(self.second_matrix_row_QLineedit.text()))
            Matrix_2_column = int(float(self.second_matrix_column_QLineedit.text()))
            if (Matrix_1_row < 0 or Matrix_2_row < 0 or Matrix_2_column < 0 or Matrix_1_column < 0):
                self.information_QLabel.setText("Please enter positive integer numbers for the matrices.")

            else:
                self.information_QLabel.setText("")
                self.first_matrix_QTableWidget = QtWidgets.QTableWidget(self)
                self.first_matrix_QTableWidget.setGeometry(QtCore.QRect(320, 40, 361, 241))
                self.first_matrix_QTableWidget.setStyleSheet("background:white;")
                self.first_matrix_QTableWidget.setRowCount(Matrix_1_row)
                self.first_matrix_QTableWidget.setColumnCount(Matrix_1_column)
                self.first_matrix_QTableWidget.setObjectName("first_matrix_QTableWidget")
                self.first_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
                self.second_matrix_QTableWidget = QtWidgets.QTableWidget(self)
                self.second_matrix_QTableWidget.setGeometry(QtCore.QRect(700, 40, 361, 241))
                self.second_matrix_QTableWidget.setStyleSheet("background:white;")
                self.second_matrix_QTableWidget.setRowCount(Matrix_2_row)
                self.second_matrix_QTableWidget.setColumnCount(Matrix_2_column)
                self.second_matrix_QTableWidget.setObjectName("second_matrix_QTableWidget")
                self.second_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
                self.result_matrix_QTableWidget = QtWidgets.QTableWidget(self)
                self.result_matrix_QTableWidget.setGeometry(QtCore.QRect(510, 370, 361, 241))
                self.result_matrix_QTableWidget.setStyleSheet("background:white;")
                self.result_matrix_QTableWidget.setRowCount(Matrix_1_row)
                self.result_matrix_QTableWidget.setColumnCount(Matrix_2_column)
                self.result_matrix_QTableWidget.setObjectName("result_matrix_QTableWidget")
                self.result_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)

                self.first_matrix_QTableWidget.show()
                self.second_matrix_QTableWidget.show()
                self.result_matrix_QTableWidget.show()


        except:
            self.information_QLabel.setText("Please enter  integer numbers for the matrices ")


    def randomizer(self):

        while True:
            try:
                self.information_QLabel.setText("")
                Matrix1 = []
                Matrix2 = []
                Result = []

                Matrix_1_row = int(float(self.first_matrix_row_QLineedit.text()))
                Matrix_1_column = int(float(self.first_matrix_column_QLineedit.text()))
                Matrix_2_row = int(float(self.second_matrix_row_QLineedit.text()))
                Matrix_2_column = int(float(self.second_matrix_column_QLineedit.text()))

                self.first_matrix_QTableWidget = QtWidgets.QTableWidget(self)
                self.first_matrix_QTableWidget.setGeometry(QtCore.QRect(320, 40, 361, 241))
                self.first_matrix_QTableWidget.setStyleSheet("background:white;")
                self.first_matrix_QTableWidget.setRowCount(Matrix_1_row)
                self.first_matrix_QTableWidget.setColumnCount(Matrix_1_column)
                self.first_matrix_QTableWidget.setObjectName("first_matrix_QTableWidget")
                self.first_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
                self.second_matrix_QTableWidget = QtWidgets.QTableWidget(self)
                self.second_matrix_QTableWidget.setGeometry(QtCore.QRect(700, 40, 361, 241))
                self.second_matrix_QTableWidget.setStyleSheet("background:white;")
                self.second_matrix_QTableWidget.setRowCount(Matrix_2_row)
                self.second_matrix_QTableWidget.setColumnCount(Matrix_2_column)
                self.second_matrix_QTableWidget.setObjectName("second_matrix_QTableWidget")
                self.second_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
                self.result_matrix_QTableWidget = QtWidgets.QTableWidget(self)
                self.result_matrix_QTableWidget.setGeometry(QtCore.QRect(510, 370, 361, 241))
                self.result_matrix_QTableWidget.setStyleSheet("background:white;")
                self.result_matrix_QTableWidget.setRowCount(Matrix_1_row)
                self.result_matrix_QTableWidget.setColumnCount(Matrix_2_column)
                self.result_matrix_QTableWidget.setObjectName("result_matrix_QTableWidget")
                self.result_matrix_QTableWidget.horizontalHeader().setDefaultSectionSize(49)
                self.first_matrix_QTableWidget.show()
                self.second_matrix_QTableWidget.show()
                self.result_matrix_QTableWidget.show()

                for i in range(0, Matrix_1_row):


                    for j in range(0, Matrix_1_column):
                        randomstring = str(random.randint(0, 5))
                        self.first_matrix_QTableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(randomstring))

                for i in range(0, Matrix_2_row):
                    for j in range(0, Matrix_2_column):
                        randomstring = str(random.randint(0, 5))
                        self.second_matrix_QTableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(randomstring))

                for i in range(0, Matrix_1_row):
                    i_Row = list()

                    for j in range(0, Matrix_1_column):
                        Row_in_order = float(self.first_matrix_QTableWidget.item(i, j).text())

                        i_Row.append(Row_in_order)
                    Matrix1.append(i_Row)

                for i in range(0, Matrix_2_row):
                    i_Row = list()

                    for j in range(0, Matrix_2_column):
                        Row_in_order = float(self.second_matrix_QTableWidget.item(i, j).text())

                        i_Row.append(Row_in_order)
                    Matrix2.append(i_Row)


                for i in range(0, Matrix_1_row):
                    for j in range(0, Matrix_2_column):
                        Sum = 0
                        for k in range(0, Matrix_2_row):
                            y = float(Matrix1[i][k]) * float(Matrix2[k][j])
                            Sum = Sum + y

                        self.result_matrix_QTableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(str(Sum)))

                break

            except:
                self.information_QLabel.setText("Please enter only integer number \nfor column and rows.")
                break
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.first_matrix_row_QLabel.setText(_translate("Form", "First Matrix Row"))
        self.first_matrix_column_QLabel.setText(_translate("Form", "First Matrix Column"))
        self.second_matrix_row_QLabel.setText(_translate("Form", "Second Matrix Row"))
        self.second_matrix_column_QLabel.setText(_translate("Form", "Second Matrix Column"))
        self.first_matrix_QTableWidget.setSortingEnabled(False)
        self.first_matrix_information_QLabel.setText(_translate("Form", "First Matrix"))
        self.second_matrix_information_QLabel.setText(_translate("Form", "Second Matrix"))
        self.calculate_QPushbutton.setText(_translate("Form", "Calculate"))
        self.result_matrix_QTableWidget.setSortingEnabled(False)
        self.result_matrix_information_QLabel.setText(_translate("Form", "Result Matrix"))
        self.create_QPushbutton.setText(_translate("Form", "Create"))
        self.random_QPushbutton.setText(_translate("Form", "Random"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_Form()
    ui.show()
    sys.exit(app.exec_())
